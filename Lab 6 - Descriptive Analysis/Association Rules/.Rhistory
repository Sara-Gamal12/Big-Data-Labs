#1 First of all, start by cleaning the workspace and setting the working directory.
rm(list = ls())  # Clear all variables
setwd("C:/Users/Sara/me/4th/big data/Big Data Labs/Big-Data-Labs/Lab 6 - Descriptive Analysis/Association Rules")
#2 Load the libraries arules and arulesViz
# install.packages("arules")
# install.packages("arulesViz")
library(arules)
library(arulesViz)
# 3 Load the transactions (AssociationRules.csv), skip the header
trans <- read.transactions("AssociationRules.csv", format = "basket", sep = ",", skip = 1)
# 4 Display first 100 transactions
inspect(trans[1:100])
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
sorted_freq <- sort(item_freq, decreasing = TRUE)
head(sorted_freq, 2)
# 5 Find the most frequent two items
itemFrequency(trans, type = "absolute")
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
sort(item_freq, decreasing = TRUE)
sorted_freq <- sort(item_freq, decreasing = TRUE)
head(sorted_freq, 2)
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
# 5 Find the most frequent two items
itemFrequency(trans, type = "absolute")
#sorted_freq <- sort(item_freq, decreasing = TRUE)
#head(sorted_freq, 2)
summary(data)
#sorted_freq <- sort(item_freq, decreasing = TRUE)
#head(sorted_freq, 2)
summary(trans)
# 5 Find the most frequent two items
#sorted_freq <- sort(item_freq, decreasing = TRUE)
#head(sorted_freq, 2)
summary(trans)
# 5 Find the most frequent two items
#sorted_freq <- sort(item_freq, decreasing = TRUE)
#head(sorted_freq, 2)
summary(trans)
clearPushBack()
# 5 Find the most frequent two items
#sorted_freq <- sort(item_freq, decreasing = TRUE)
#head(sorted_freq, 2)
summary(trans)
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
sorted_freq <- sort(item_freq, decreasing = TRUE)
head(sorted_freq, 2)
# 5 Find the most frequent two items
itemFrequency(trans, type = "absolute")
item_freq <
item_freq <
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
sorted_freq <- sort(item_freq, decreasing = TRUE)
head(sorted_freq, 2)
# 5 Find the most frequent two items
summary(trans)
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
sorted_freq <- sort(item_freq, decreasing = TRUE)
head(sorted_freq, 2)
# 5 Find the most frequent two items
item_freq <- itemFrequency(transactions, type = "absolute")
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
top_items <- head(sort(item_freq, decreasing = TRUE), 2)
top_items
# 6 Plot the 5 most frequent items
itemFrequencyPlot(trans, topN = 5, type = "absolute", main = "Top 5 Frequent Items")
# 6 Plot the 5 most frequent items
itemFrequencyPlot(trans, topN = 5, type = "absolute", main = "Top 5 Frequent Items")
# 6 Plot the 5 most frequent items
itemFrequencyPlot(trans, topN = 5, type = "absolute", main = "Top 5 Frequent Items")
# 6 Plot the 5 most frequent items
itemFrequencyPlot(trans, topN = 5, type = "absolute", main = "Top 5 Frequent Items")
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(supp = 0.01, conf = 0.5, minlen = 2))
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support[1:6])
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(supp = 0.01, conf = 0.5, minlen = 2))
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support[1:6])
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(supp = 0.01, conf = 0.5, minlen = 2))
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support)
rules_support
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(supp = 0.01, conf = 0.5, minlen = 2))
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support[1:6])
rules
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(supp = 0.01, conf = 0.5, minlen = 2))
rules
# 3 Load the transactions (AssociationRules.csv), skip the header
trans <- read.transactions("AssociationRules.csv", format = "basket", sep = ",", skip = 1)
# 4 Display first 100 transactions
inspect(trans[1:100])
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
top_items <- head(sort(item_freq, decreasing = TRUE), 2)
top_items
# 6 Plot the 5 most frequent items
itemFrequencyPlot(trans, topN = 5, type = "absolute", main = "Top 5 Frequent Items")
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(supp = 0.01, conf = 0.5, minlen = 2))
rules
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(support = 0.01, confidence = 0.5, minlen = 2))
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support[1:6])
rules
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans,parameter = list(support = 0.01, confidence = 0.5, minlen = 2))
rules
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans, parameter = list(support = 0.01, confidence = 0.5, minlen = 2))
rules
View(rules)
rules
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support[1:6])
# 3 Load the transactions (AssociationRules.csv), skip the header
trans <- read.transactions("AssociationRules.csv", format = "basket", header = FALSE)
# 4 Display first 100 transactions
inspect(trans[1:100])
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
top_items <- head(sort(item_freq, decreasing = TRUE), 2)
top_items
# 6 Plot the 5 most frequent items
itemFrequencyPlot(trans, topN = 5, type = "absolute", main = "Top 5 Frequent Items")
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans, parameter = list(support = 0.01, confidence = 0.5, minlen = 2))
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support[1:6])
# 9 Sort rules by confidence and display first 6
rules_conf <- sort(rules, by = "confidence", decreasing = TRUE)
inspect(rules_conf[1:6])
#10 Sort rules by lift and display first 6
rules_lift <- sort(rules, by = "lift", decreasing = TRUE)
inspect(rules_lift[1:6])
# 11 Plot rules: support vs confidence, lift as shading
plot(rules, measure = c("support", "confidence"), shading = "lift", interactive = FALSE)
#1 First of all, start by cleaning the workspace and setting the working directory.
rm(list = ls())  # Clear all variables
setwd("C:/Users/Sara/me/4th/big data/Big Data Labs/Big-Data-Labs/Lab 6 - Descriptive Analysis/Association Rules")
#2 Load the libraries arules and arulesViz
# install.packages("arules")
# install.packages("arulesViz")
library(arules)
library(arulesViz)
# 3 Load the transactions (AssociationRules.csv), skip the header
trans <- read.transactions("AssociationRules.csv", format = "basket", header = FALSE)
# 4 Display first 100 transactions
inspect(trans[1:100])
# 5 Find the most frequent two items
item_freq <- itemFrequency(trans, type = "absolute")
top_items <- head(sort(item_freq, decreasing = TRUE), 2)
top_items
# 6 Plot the 5 most frequent items
itemFrequencyPlot(trans, topN = 5, type = "absolute", main = "Top 5 Frequent Items")
# 7 Generate association rules with minimum support and confidence
rules <- apriori(trans, parameter = list(support = 0.01, confidence = 0.5, minlen = 2))
# 8 Sort rules by support and display first 6
rules_support <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_support[1:6])
# 9 Sort rules by confidence and display first 6
rules_conf <- sort(rules, by = "confidence", decreasing = TRUE)
inspect(rules_conf[1:6])
#10 Sort rules by lift and display first 6
rules_lift <- sort(rules, by = "lift", decreasing = TRUE)
inspect(rules_lift[1:6])
# 11 Plot rules: support vs confidence, lift as shading
plot(rules, measure = c("support", "confidence"), shading = "lift", interactive = FALSE)
most_important_rules <- sort(rules, by = c("lift", "confidence", "support"), descreasing = TRUE)
inspect(sorted_rules[1:6])
most_important_rules <- sort(rules, by = c("lift", "confidence", "support"), descreasing = TRUE)
inspect(sorted_rules[1:6])
most_important_rules <- sort(rules, by = c("lift", "confidence", "support"), descreasing = TRUE)
inspect(most_important_rules[1:6])
