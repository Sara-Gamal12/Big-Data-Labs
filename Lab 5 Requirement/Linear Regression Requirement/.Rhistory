#=================================Part(3)==================================================
#(Q7) Import the dataset LungCapData.tsv. What are the variables in this dataset?
LungCap=read.table("LungCapData.tsv", header=TRUE, sep="\t")
#print the varaibles in the dataset
print(names(LungCap))
#(Q8) Draw a scatter plot of Age (x-axis) vs. LungCap (y-axis). Label x-axis "Age" and y-axis "LungCap"
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
#(Q9) Draw a pair-wise scatter plot between Lung Capacity, Age and Height.
#Check the slides for how to plot a pair-wise scatterplot
pairs(LungCap[,c("LungCap", "Age", "Height")])
#(Q10) Calculate correlation between Age and LungCap, and between Height and LungCap.
#Hint: You can use the function cor
agelung=cor(LungCap$Age, LungCap$LungCap)
heightlung=cor(LungCap$Height, LungCap$LungCap)
##print the more correlated variables
if(agelung >heightlung){
print("Age is more correlated to LungCap")
}else{
print("Height is more correlated to LungCap")
}
#(Q12) Do you think the two variables (Height and LungCap) are correlated ? why ?
#yes
#(Q13) Fit a liner regression model where the dependent variable is LungCap
#and use all other variables as the independent variables
model <- lm(LungCap ~ ., data=LungCap)
#(Q14) Show a summary of this model
summary(model)
#(Q15) What is the R-squared value here ? What does R-squared indicate?
summary(model)$r.squared
#(Q16) Show the coefficients of the linear model. Do they make sense?
#If not, which variables don't make sense? What should you do?
coef(model)
#(Q17) Redraw a scatter plot between Age and LungCap. Display/Overlay the linear model (a line) over it.
#Hint: Use the function abline(model, col="red").
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
abline(model, col="red")
#plot the  line alone
plot(NULL, NULL, xlim=range(LungCap$Age), ylim=range(-12,0),
xlab="Age", ylab="Lung Capacity")
abline(model, col="red")
#(Q18)Repeat Q13 but with these variables Age, Smoke and Cesarean as the only independent variables.
model2 <- lm(LungCap ~ Age + Smoke + Caesarean, data = LungCap)
#(Q19)Repeat Q16, Q17 for the new model. What happened?
coef(model2)
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
abline(model2, col="red")
#(Q20)Predict results for this regression line on the training data.
ypred <- predict(model2)
ypred
#show the predicted values
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
points(LungCap$Age, ypred, col="red")
#(Q21)Calculate the mean squared error (MSE)of the training data.
MSE = mean((LungCap$LungCap - ypred)^2)
MSE
ypred <- predict(model)
MSE = mean((LungCap$LungCap - ypred)^2)
MSE
#setwd("~/LAB")
rm(list=ls())
#=============================Part(1)=====================================
x <- runif(100, 0, 10)     # 100 draws between 0 & 10
#(Q1) Try changing the value of standard deviation (sd) in the next command
#How do the data points change for different values of standard deviation?
y <- 5 + 6*x + rnorm(100, sd = 2)  # default values for rnorm (mean = 0 and sigma = 1)
#Plot it
plot (x,y)
# OLS model
# OLS : Ordinary Least Squares
model1 <- lm(y ~ x)
# Compact model results
print(model1)
# Regression diagnostics --
ypred <- predict(model1) # use the trained model to predict the same training data
par(mfrow=c(1,1))
plot(y,y, type="l", xlab="true y", ylab="predicted y") # ploting the ideal line
points(y, ypred) # plotting the predicted points
# Detailed model results
d1 <- summary(model1)
print(model1)
# Learn about this object by saying ?summary.lm and by saying str(d)
cat("OLS gave slope of ", d1$coefficients[2,1],
"and an R-sqr of ", d1$r.squared, "\n")
#Graphic dignostic (cont.)
par(mfrow=c(1,1)) # parameters for the next plot
plot(model1, 1) # plot one diagnostic graphs
#========================Part(2)=====================================================
#Training a linear regression model
x1 <- runif(100)
# introduce a slight nonlinearity
#(A)
y1 = 5 + 6*x1 + 0.1*x1*x1 + rnorm(100)
plot(x1,y1)
model <- lm(y1 ~ x1)
summary(model)
x1 <- runif(100)
#(B)
ytrue = 5 + 6*x1 + 0.1*x1*x1 + rnorm(100)  # same equation of y1 but on xtest to get true y for xtest
ypred <- predict(model, data.frame(x1))
par(mfrow=c(1,1))
plot(ytrue, ytrue, type="l", xlab="true y", ylab="predicted y")
points(ytrue, ypred)
# graphic dignostic (cont.)
par(mfrow=c(1,1)) # parameters for the next plot
plot(model, 1) # plot the diagnostic graphs
#=================================Part(3)==================================================
#(Q7) Import the dataset LungCapData.tsv. What are the variables in this dataset?
LungCap=read.table("LungCapData.tsv", header=TRUE, sep="\t")
#print the varaibles in the dataset
print(names(LungCap))
#(Q8) Draw a scatter plot of Age (x-axis) vs. LungCap (y-axis). Label x-axis "Age" and y-axis "LungCap"
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
#(Q9) Draw a pair-wise scatter plot between Lung Capacity, Age and Height.
#Check the slides for how to plot a pair-wise scatterplot
pairs(LungCap[,c("LungCap", "Age", "Height")])
#(Q10) Calculate correlation between Age and LungCap, and between Height and LungCap.
#Hint: You can use the function cor
agelung=cor(LungCap$Age, LungCap$LungCap)
heightlung=cor(LungCap$Height, LungCap$LungCap)
##print the more correlated variables
if(agelung >heightlung){
print("Age is more correlated to LungCap")
}else{
print("Height is more correlated to LungCap")
}
#(Q12) Do you think the two variables (Height and LungCap) are correlated ? why ?
#yes
#(Q13) Fit a liner regression model where the dependent variable is LungCap
#and use all other variables as the independent variables
model <- lm(LungCap ~ ., data=LungCap)
#(Q14) Show a summary of this model
summary(model)
#(Q15) What is the R-squared value here ? What does R-squared indicate?
summary(model)$r.squared
#(Q16) Show the coefficients of the linear model. Do they make sense?
#If not, which variables don't make sense? What should you do?
coef(model)
#(Q17) Redraw a scatter plot between Age and LungCap. Display/Overlay the linear model (a line) over it.
#Hint: Use the function abline(model, col="red").
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
abline(model, col="red")
#plot the  line alone
plot(NULL, NULL, xlim=range(LungCap$Age), ylim=range(-12,0),
xlab="Age", ylab="Lung Capacity")
abline(model, col="red")
#(Q18)Repeat Q13 but with these variables Age, Smoke and Cesarean as the only independent variables.
model2 <- lm(LungCap ~ Age + Smoke + Caesarean, data = LungCap)
#(Q19)Repeat Q16, Q17 for the new model. What happened?
coef(model2)
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
abline(model2, col="red")
#(Q20)Predict results for this regression line on the training data.
ypred <- predict(model2)
ypred
#show the predicted values
plot(LungCap$Age, LungCap$LungCap, xlab="Age", ylab="LungCap")
points(LungCap$Age, ypred, col="red")
#(Q21)Calculate the mean squared error (MSE)of the training data.
MSE = mean((LungCap$LungCap - ypred)^2)
MSE
ypred <- predict(model)
MSE = mean((LungCap$LungCap - ypred)^2)
