#Logit
rm(list=ls())
# [Data Description]:
# the marketing campaign team wants to send
# special offers to those respondents with the highest probability of purchase.
# the response variable is purchase or no purchase
# given customer income and age and product price
Mydata <- read.csv("survey.csv",header=TRUE,sep=",")
# [1] Explore data
table(Mydata$MYDEPV) # the outcome variable
# purchase or no purchase
with(Mydata, table(Price,MYDEPV))
summary(Mydata$Age)
cor.mat <- cor(Mydata[,-1]) # the input variables
cor.mat # Note: The general rule is not to include variables in your model that are
#(Q1) Write the variable pairs that are not correlated at all to each other.
if (cor.mat[1,2] == 0) {
print("Price and Income are not correlated")
}
if (cor.mat[1,3] == 0) {
print("Price and Age are not correlated")
}
if (cor.mat[2,3] == 0) {
print("Income and Age are not correlated")
}
#(Q2) Are there any highly correlated variables in this dataset?
##No ,there is no highly correlated variables because no correlation value is close to 1 or -1,
# [2] Test a model with 3 variables Price, Income and Age
mylogit <- glm(MYDEPV ~ Income + Age + as.factor(Price),
data =Mydata, family=binomial(link="logit"),
na.action=na.pass) # as.factor(Price) : to deal with price as categorical feature
summary(mylogit)
#(Q3): How many categories are there for the Price variable?
##There are 3 categories for the Price variable (10,20,30)
levels(as.factor(Mydata$Price))
# [3] ROC Curve
if(!require("ROCR"))
{
install.packages("ROCR")
library(ROCR)
}
#### NOTE: For this part, you need to search and read about the ROC curve.
pred = predict(mylogit, type="response") # this returns the probability scores on the training data
predObj = prediction(pred, Mydata$MYDEPV) # prediction object needed by ROCR
rocObj = performance(predObj, measure="tpr", x.measure="fpr")  # creates ROC curve obj
aucObj = performance(predObj, measure="auc")  # auc object
auc = aucObj@y.values[[1]]
auc   # the auc score: tells you how well the model predicts.
#(Q5.2) What is the maximum value of AUC (ideal case)?
##1
# plot the roc curve
plot(rocObj, main = paste("Area under the curve:", auc))
#(Q6) What does each point in the ROC graph represent?
#In other words, what is the value that changes and drives TPR and FPR to change too
#from one point to another in the graph?
#Each point in the ROC curve represents a different threshold used by the classifier.
#The value that changes and drives both True Positive Rate (TPR)
#and False Positive Rate (FPR) is the classification threshold.
# [4] Predictions
#Prediction - 1
Price <- c(10,20,30)
Age <- c(mean(Mydata$Age))
Income <- c(mean(Mydata$Income))
newdata1 <- data.frame(Income,Age,Price) # Note: The predict function requires the variables to be named exactly as in the fitted model.
newdata1
newdata1$PurchaseP <- predict (mylogit,newdata=newdata1,type="response")
newdata1
#(Q7) How is the predicted probability affected by changing only price holding all other variables constant?
#As the price increases the predicted probability of purchase decreases.
#Prediction - 2
newdata2 <- data.frame(Age=seq(min(Mydata$Age),max(Mydata$Age),2),
Income=mean(Mydata$Income),Price=30)
newdata2
newdata2$PurchaseP <- predict(mylogit,newdata=newdata2,type="response")
newdata2
cbind(newdata2$Age,newdata2$PurchaseP)
plot(newdata2$Age,newdata2$PurchaseP)
#(Q8) How is the predicted probability affected by changing only age holding all other variables constant?
#It ‘s clear that as the age increases the probability of purchase increases.
#Prediction - 3
newdata3 <- data.frame(Income= seq(20,90,10),Age=mean(Mydata$Age),Price=30)
newdata3$PurchaseP<-predict(mylogit,newdata=newdata3,type="response")
cbind(newdata3$Income,newdata3$PurchaseP)
plot(newdata3$Income,newdata3$PurchaseP)
#(Q9) How is the predicted probability affected by changing only income holding all other variables constant?
#It ‘s clear that as the income increases the probability of purchase increases.
#Prediction 4
newdata4 <- data.frame (Age= round(runif(10,min(Mydata$Age),max(Mydata$Age))),
Income= round(runif(10,min(Mydata$Income),max(Mydata$Income))),
Price = round((runif(10,10,30)/10))*10)
newdata4$Prob <- predict(mylogit,newdata=newdata4,type="response")
newdata4
